# -*- coding: utf-8 -*-

import numpy as np

def nonlin(x, deriv = False):
    if (deriv == True):
        return x * (1 - x)
    return 1/(1+np.exp(-x))

#np.random.seed(1)
X = np.array([[1.5368679147170372, -0.04756347867473179], 
[2.098508246473502, -2.4901803043396207], 
[-8.745361923581058, -12.305869021467707], 
[5.004980650128861, -2.698080183626915], 
[11.426955085942, -2.4564332869631746], 
[-4.649750024646218, -22.395512668401782], 
[1.2971514038799423, -2.8400736278344123], 
[-1.6200073472746424, -2.2810759355027876], 
[0.09666022071191356, -2.106671260226007], 
[-1.5531888945683, -3.0876620836243416], 
[19.285461616558315, -0.6599759631733841], 
[-18.96860464022436, 1.2017827833634767], 
[0.10506529687415964, -0.22394924743680433], 
[3.629221191123367, -3.118318566409119], 
[-0.42343498167487503, -1.7702821017628898], 
[-19.30019951293647, 4.480893481135938], 
[7.073016677548773, 2.836090576322252], 
[20.489825645842323, 6.659638799462994], 
[-1.5805607629359322, -9.354210322725457], 
[-0.19831532849961261, 4.369118201403963], 
[2.029094632642951, 11.967705573109603], 
[-0.5420598174951248, -0.7814528224941971], 
[1.6920827498835402, 0.6378052066588796], 
[-1.775698706124139, -3.3975229536852494], 
[-6.565763586516028, -3.169368038475273], 
[0.2688372273326397, -0.2629790082910807], 
[1.482215718098793, 0.11045583581291026], 
[1.723609879542743, -5.5684449099407995], 
[-1.7735106144055703, 2.1107025299077504], 
[8.245272045235385, 4.241425181306275], 
[-9.618501174437839, 6.945023415466519], 
[9.149413580833002, -19.70123254515599], 
[0.8225740879966957, 7.3496536228218], 
[1.0907111388350212, 5.441438276504007], 
[-4.697771735644489, 9.889090233832118], 
[14.252585015990737, 3.698747501545036], 
[-1.622005499200476, -1.0579172078409937], 
[2.153530060201481, 1.7902515132908856], 
[-17.78290137475179, 14.81027462305845], 
[-0.5349050906990479, -3.763094291249636], 
[-0.33602917882068384, 2.7590296029283863], 
[-0.28530832277038387, -7.749316568856597], 
[8.788899085104882, -8.07657044832388], 
[6.864323371541204, 4.243539158359067], 
[0.9046310201272348, 4.393017580066172], 
[-6.826002296438862, -9.945477440778555], 
[-3.118447866115697, 0.8045633952829706], 
[8.620633315485623, -12.862935484384959], 
[5.587437343755162, -11.8770638174163], 
[-2.8094405587002176, -11.55091043743511], 
[1.8823493471674402, 17.167208989696167], 
[-1.6877964465183084, -0.7938166771400834], 
[-12.914604384459446, 8.682674296312104], 
[-4.270733143783038, 3.147779163872298], 
[-7.684330712463214, -23.234077882030792], 
[3.110022665654842, 11.584396501252252], 
[16.66934384168001, -7.681361085036089], 
[0.9613760328307214, 5.512761879018876], 
[-0.17456038231037607, -2.786011625060369], 
[2.897586103668417, -1.2531990596131801], 
[-13.858685412940387, 11.28507495212565], 
[-11.373249411240074, -8.097740518515], 
[5.027539287388564, 16.98679314917437], 
[8.267251447165947, -10.332588913169866], 
[-8.378709531233183, 3.6458322923776247], 
[1.008092715764637, 4.168239078869018], 
[3.495663791975586, -9.506373100815289], 
[0.2614595954483603, -0.3665200201957031], 
[0.38683096441932724, -0.6295064722659862], 
[-4.978637147406903, -3.4535132477141954], 
[9.972938760532616, -0.24286564950192993], 
[1.6319191456430338, 4.314624733073965], 
[2.0304750800205458, -0.6409573897505235], 
[-5.967787445678887, 3.6384475157915745], 
[2.2485761651970755, 6.548913769146637], 
[-8.380370452816774, -6.156283216907405], 
[0.7923696987924951, -0.06306209625537439], 
[-2.460730640727936, -9.577967249421652], 
[-3.4023343357087446, 8.384992554040453], 
[-0.5990587796294472, -0.4013922453964456], 
[0.39593546077295466, 0.07818114027216518], 
[0.060495641922032085, 3.4614841330090664], 
[-5.4418777902122475, -13.459361899886364], 
[2.0811258371633574, 5.045708224105039], 
[9.895540775739194, -1.394596345494017], 
[8.044791406632458, -17.7059223240186], 
[1.229540936573632, -2.115049548916393], 
[-8.029936328770132, 16.709699119736378], 
[9.88986538830142, 20.704942428687517], 
[-13.756659046057868, 12.110681126291416], 
[2.0512702801215794, -0.47577996028847025], 
[-3.796554050226682, 0.597721998022068], 
[-0.2724204018150838, 0.08008027624167875], 
[0.1821436566584949, -11.410814997478312], 
[2.6411540938409788, 6.128508562050919], 
[-25.0, 0.0], 
[25.0, 0.0], 
[0.0, 0.0], 
[0.0, -25.0], 
[0.0, 25.0]])

Y = np.array([[0.2549240063016085], 
[0.3885519799232475], 
[0.5983336427920276], 
[0.32868937962124567], 
[0.283700402733126], 
[0.5325808250095188], 
[0.4318120039369694], 
[0.5982837675586054], 
[0.4927026251386711], 
[0.5741772246483131], 
[0.25544438417010873], 
[0.760070027166081], 
[0.4301846710407906], 
[0.3629722352648832], 
[0.5373663337645582], 
[0.7863074950406419], 
[0.1893070398855331], 
[0.19998531041547948], 
[0.5266404403079507], 
[0.9927808738345666], 
[0.026730126816538746], 
[0.5965204497244795], 
[0.19263005013599757], 
[0.5766488826342446], 
[0.6784246470172821], 
[0.37324690043837505], 
[0.2381615353187648], 
[0.45222513723941304], 
[0.8887818275628419], 
[0.17438443251183722], 
[0.8495308535919288], 
[0.43080405260139115], 
[0.017738819379569667], 
[0.03148463067571882], 
[0.9294170454169053], 
[0.20958850373130555], 
[0.6580180242309549], 
[0.13961918587159158], 
[0.860524486694734], 
[0.5224725345419446], 
[0.9807111167996029], 
[0.5058569977195846], 
[0.36828193724136105], 
[0.1618765446483816], 
[0.03232212232525488], 
[0.5957318288451837], 
[0.7901858183337569], 
[0.4060287016805355], 
[0.4300162887770143], 
[0.537972726338919], 
[0.017381578178714552], 
[0.6800308872488262], 
[0.844204189102835], 
[0.8510899387210185], 
[0.5508357668525774], 
[0.041743477200524404], 
[0.3187239209433888], 
[0.027478848571921174], 
[0.5099589956341984], 
[0.31496768607590536], 
[0.8587660988383585], 
[0.6515254933234683], 
[0.04579734278639102], 
[0.39260055859159576], 
[0.815320357187109], 
[0.03776657935237693], 
[0.4439183894421776], 
[0.4013821528463023], 
[0.4123036816925729], 
[0.6534784860872936], 
[0.25387504939713734], 
[0.05755029411571421], 
[0.2986646522747509], 
[0.8371385409385194], 
[0.05263877983848653], 
[0.6491631003930075], 
[0.26263997560507313], 
[0.5400237978510226], 
[0.9386511676635896], 
[0.6560455711166965], 
[0.21897252214181476], 
[0.0027812348649915997], 
[0.5611511854040226], 
[0.06226090857633681], 
[0.272283237322358], 
[0.43212512164438266], 
[0.4161924859112191], 
[0.9287031557519406], 
[0.07092169650673728], 
[0.8648863658405506], 
[0.28627363808511724], 
[0.7748530390576855], 
[0.7955031786824146], 
[0.4974597255690012], 
[0.064761678741875], 
[0.75], 
[0.25], 
[0.0], 
[0.5], 
[0.0]])

syn0 = 2 * np.random.random((2, 100)) - 1
syn1 = 2 * np.random.random((100, 1)) - 1
l0 = X
iters = 1000000000
prev_error = 0
for iter in xrange(iters):
    l1 = nonlin(np.dot(l0, syn0))
    l2 = nonlin(np.dot(l1, syn1))
    l2_error = Y - l2
    prev_error += np.mean(np.abs(l2_error)) * 100
    if (iter%10000) == 0:
        print "Average Error: " + str(prev_error/(iter + 1)) + "%"
        print str((float)(iter * 100)/iters) + "% complete"

    l2_delta = l2_error * nonlin(l2, deriv=True) * .01#(1 - ((float)(iter)/iters))
    l1_error = l2_delta.dot(syn1.T)
    l1_delta = l1_error * nonlin(l1, deriv=True) * .01#(1 - ((float)(iter)/iters))
    syn1 += l1.T.dot(l2_delta)
    syn0 += l0.T.dot(l1_delta)